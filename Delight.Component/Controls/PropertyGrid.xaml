<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:Delight.Component.Controls"
    xmlns:cvt="clr-namespace:Delight.Component.Converters"
    xmlns:local="clr-namespace:Delight.Component.Controls"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Delight.Component;component/Resources/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Delight.Component;component/Resources/Paths.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Converters  -->

    <!--<cvt:DoubleToCornerRadiusConverter x:Key="Converter.DoubleToCornerRadius" />-->
    <cvt:NullObjectToVisibilityConverter x:Key="Converter.NullObjectToVisibility" />
    <cvt:NullObjectToVisibilityConverter
        x:Key="Converter.NotNullObjectToVisibility"
        NotNullValue="Collapsed"
        NullValue="Visible" />
    <!--<cvt:RadiusConverter x:Key="Converter.Radius" />
            <cvt:GridViewColumnStarConverter x:Key="Converter.GridViewColumnStar" />
            <cvt:PercentageConverter x:Key="Converter.Percentage" />-->
    <!--<cvt:ToolboxIconConverter x:Key="Converter.ToolboxIcon" />-->
    <cvt:DisplayNameConverter x:Key="Converter.DisplayName" />
    <cvt:BoolToVisibilityConverter x:Key="Converter.BoolToVisibility" />
    <cvt:BoolToVisibilityConverter
        x:Key="Converter.NotBoolToVisibility"
        FalseValue="Visible"
        TrueValue="Collapsed" />
    <!--<cvt:PathToImageConverter x:Key="Converter.PathToImage" />
            <cvt:LowercaseConverter x:Key="Converter.Lowercase" />
            <cvt:DoubleToStringConverter x:Key="Converter.DoubleToString" />
            <cvt:NotConverter x:Key="Converter.Not" />
            <cvt:FallbackStringConverter x:Key="Converter.FallbackString" />
            <cvt:TreeViewLineConverter x:Key="Converter.TreeViewLine" />
            <cvt:JsonValueLineConverter x:Key="Converter.JsonValueLine" />
            <cvt:ObjectModelNameConverter x:Key="Converter.ObjectModelName" />
            <cvt:StringLengthConverter x:Key="Converter.StringLength" />-->
    <cvt:BoolToStringConverter x:Key="Converter.BoolToString" />

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource Brush.Expander.Header.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Expander.Seperator}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,1"
                        SnapsToDevicePixels="True">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Path
                                x:Name="arrow"
                                Margin="23,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Triangle.Top}"
                                Fill="{StaticResource Brush.Expander.Header.Arrow.Background}"
                                SnapsToDevicePixels="true" />
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="{StaticResource Path.Triangle.Bottom}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetterDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource Brush.Expander.Header.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Expander.Seperator}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,1"
                        SnapsToDevicePixels="True">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="40" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />

                            <Path
                                x:Name="arrow"
                                Grid.Column="1"
                                Margin="0,0,12,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Triangle.Top}"
                                Fill="{StaticResource Brush.Expander.Header.Arrow.Background}"
                                SnapsToDevicePixels="true" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="{StaticResource Path.Triangle.Bottom}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource Brush.ToolBox.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{x:Null}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetterExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{x:Null}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource SetterDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBarStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource Brush.SearchBar.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.SearchBar.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.SearchBar.Border}" />
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.SearchBar.Foreground}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="BorderThickness" Value="0,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid x:Name="grid" Margin="8,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Path
                                Width="12"
                                Height="12"
                                Margin="4,0"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Search}"
                                Fill="{StaticResource Brush.SearchBar.Icon.Background}"
                                Stretch="Uniform" />

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Focusable="false"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                            <TextBlock
                                x:Name="textHint"
                                Grid.Column="1"
                                Margin="6,0"
                                VerticalAlignment="Center"
                                Focusable="false"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Opacity="0.56"
                                Text="{Binding Path=(c:Hint.Text), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="textHint" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="grid" Property="Margin" Value="6,-1,0,-1" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Flat.Accent.DeepDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ValueBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="TabIndex" Value="0" />
        <Setter Property="Background" Value="{StaticResource Brush.PropertyGrid.Setter.Value.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.PropertyGrid.Foreground}" />
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.PropertyGrid.Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.PropertyGrid.Setter.Value.Border}" />
        <Setter Property="Padding" Value="4,3" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Brush.PropertyGrid.Setter.Value.Focused.Border}" />
                            <Setter Property="Background" Value="{StaticResource Brush.PropertyGrid.Setter.Value.Focused.Background}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FlatSliderRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Height="1" Fill="#979797" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatSliderRepeatButton1" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Height="1"
                        Fill="{StaticResource Brush.Flat.Accent}"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatSliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Width="13"
                        Height="13"
                        Fill="Transparent"
                        Stroke="{StaticResource Brush.Flat.Accent}"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
                                        Margin="0,0,0,0"
                                        Command="Slider.DecreaseLarge"
                                        Style="{StaticResource FlatSliderRepeatButton1}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource FlatSliderThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
                                        Margin="0,0,0,0"
                                        Command="Slider.IncreaseLarge"
                                        Style="{StaticResource FlatSliderRepeatButton}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PropertyGrid Style  -->
    <Style TargetType="{x:Type c:PropertyGrid}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
        <Setter Property="Background" Value="{StaticResource Brush.PropertyGrid.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.PropertyGrid.Foreground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="BorderBrush" Value="{StaticResource Brush.Expander.Seperator}" />
                    <Setter Property="Background" Value="{StaticResource Brush.PropertyGrid.Setter.Background}" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                                    x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,1,0,0"
                                    SnapsToDevicePixels="True">
                                    <Grid
                                        Margin="4"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                        <GridViewRowPresenter
                                            Grid.RowSpan="2"
                                            Columns="{TemplateBinding GridView.ColumnCollection}"
                                            Content="{TemplateBinding Content}"
                                            Focusable="False" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                        <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.PropertyGrid.Setter.Hover}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="View">
            <Setter.Value>
                <GridView x:Name="gridView">
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>

                    <local:StarGridViewColumn StarWidth="1">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    FontSize="12"
                                    Foreground="{StaticResource Brush.PropertyGrid.Setter.Header.Foreground}"
                                    Text="{Binding Title}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding Title}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </local:StarGridViewColumn>
                    <local:StarGridViewColumn StarWidth="1.7">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter
                                    Margin="0,0,16,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{Binding Setter}"
                                    Focusable="False" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </local:StarGridViewColumn>
                </GridView>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PropertyGrid}">
                    <DockPanel>
                        <Border
                            Padding="0,25,0,0"
                            Background="#FF2F2C33"
                            BorderBrush="{StaticResource Brush.Expander.Seperator}"
                            DockPanel.Dock="Top" />
                        <!--
                            TextBlock.Foreground="{StaticResource Brush.PropertyGrid.Setter.Header.Foreground}"
                            Visibility="{TemplateBinding DataContext,
                            Converter={StaticResource Converter.NullObjectToVisibility}}"
                        -->
                        <TextBox
                            x:Name="PART_searchBox"
                            local:Hint.Text="속성 검색"
                            DockPanel.Dock="Top"
                            Style="{DynamicResource SearchBarStyle}" />
                        <ScrollViewer
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            DockPanel.Dock="Top"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Disabled">
                            <StackPanel>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </ScrollViewer>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Brush.ToolBox.Group.Background" Color="{DynamicResource Color.ToolBox.Group.Background}" />
    <Color x:Key="Color.ToolBox.Group.Background">#4C4C4C</Color>

    <SolidColorBrush x:Key="Brush.ToolBox.Foreground" Color="{DynamicResource Color.ToolBox.Foreground}" />
    <Color x:Key="Color.ToolBox.Foreground">#ffffff</Color>

    <Style x:Key="DelightGroupItemStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander
                        Padding="0"
                        Background="{StaticResource Brush.ToolBox.Group.Background}"
                        IsExpanded="True">
                        <Expander.Header>
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="12"
                                Foreground="{StaticResource Brush.ToolBox.Foreground}"
                                Text="{Binding Name}" />
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>